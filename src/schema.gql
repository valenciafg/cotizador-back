# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserDto {
  uuid: String!
  email: String!
  status: Boolean!
  registerStep: Float!
  userType: Float!
  businessName: String
  commercialName: String
  lastName: String
  name: String
  address: String!
  description: String!
  phone: String!
  phoneCode: String!
  optionalPhone: String!
  optionalPhoneCode: String!
  currentCompanies: [CompanyDto!]!
  workedCompanies: [CompanyDto!]!
  workedProjects: [CompanyDto!]!
  services: [CompanyDto!]!
  headings: [CompanyDto!]!
  knowledges: [CompanyDto!]!
  departmentId: String
  provinceId: String
  districtId: String
  profilePic: FileDto
  department: DeparmentDto!
  province: ProvinceDto!
  district: DistrictDto!
  fullname: String
}

type CityDto {
  uuid: String!
  idUbigeo: Float!
  ubigeoReniec: String!
  ubigeoInei: String!
  departamentoInei: String!
  departamento: String!
  provinciaInei: String!
  provincia: String!
  distrito: String!
  region: String!
  macroregionInei: String!
  macroregionMinsa: String!
  isoCode: String!
  fips: String!
  superficie: Float!
  altitud: Float!
  latitud: Float!
  longitud: Float!
  frontera: String!
  createdAt: DateTime!
  updatedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type DeparmentDto {
  departamentoInei: String!
  departamento: String!
}

type ProvinceDto {
  provinciaInei: String!
  provincia: String!
}

type DistrictDto {
  idUbigeo: Float!
  distrito: String!
  uuid: String!
}

type CompanyDto {
  uuid: String!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime
}

type FileDto {
  content: String!
  ext: String!
  mime: String!
}

type HeadingDto {
  uuid: String!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime
}

type ServiceDto {
  uuid: String!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime
}

type KnowledgeDto {
  uuid: String!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime
}

type ProjectDto {
  uuid: String!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime
}

type PostDto {
  uuid: String!
  title: String!
  description: String!
  content: String!
  postType: String!
  mainImage: String
  mainImageUrl: String
  createdBy: UserDto
  updatedBy: String!
  createdAt: DateTime!
  updatedAt: DateTime
}

type Query {
  me: UserDto!
  users(input: SearchUsersInput!): [UserDto!]!
  user(uuid: String!): UserDto!
  companies: [CompanyDto!]!
  findCompany(input: FindCompanyInput!): CompanyDto!
  headings: [HeadingDto!]!
  findHeading(input: FindHeadingInput!): HeadingDto!
  services: [ServiceDto!]!
  findService(input: FindServiceInput!): ServiceDto!
  knowledges: [KnowledgeDto!]!
  findKnowledge(input: FindKnowledgeInput!): KnowledgeDto!
  projects: [ProjectDto!]!
  findProject(input: FindProjectInput!): ProjectDto!
  cities: [CityDto!]!
  findCity(input: FindCityInput!): CityDto!
  getDeparments: [DeparmentDto!]!
  getProvinces(departamentoInei: String!): [ProvinceDto!]!
  getDistricts(provinciaInei: String!): [DistrictDto!]!
  posts: [PostDto!]!
  post(input: FindPostInput!): PostDto
}

input SearchUsersInput {
  serviceId: String
  deparmentId: String
  provinceId: String
  districtId: String
}

input FindCompanyInput {
  uuid: String
  name: String
}

input FindHeadingInput {
  uuid: String
  name: String
}

input FindServiceInput {
  uuid: String
  name: String
}

input FindKnowledgeInput {
  uuid: String
  name: String
}

input FindProjectInput {
  uuid: String
  name: String
}

input FindCityInput {
  uuid: String
  idUbigeo: Float
}

input FindPostInput {
  uuid: String
}

type Mutation {
  addUserKnowledge(name: String!): UserDto!
  deleteUserKnowledge(uuid: String!): String!
  addUserWorkedProject(name: String!): UserDto!
  deleteUserWorkedProject(uuid: String!): String!
  addUserCurrentCompany(name: String!): UserDto!
  deleteUserCurrentCompany(uuid: String!): String!
  addUserWorkedCompany(name: String!): UserDto!
  deleteUserWorkedCompany(uuid: String!): String!
  addUserService(name: String!): UserDto!
  deleteUserService(uuid: String!): String!
  addUserHeading(name: String!): UserDto!
  deleteUserHeading(uuid: String!): String!
  createCompany(input: CreateCompanyInput!): CompanyDto!
  createHeading(input: CreateHeadingInput!): HeadingDto!
  createService(input: CreateServiceInput!): ServiceDto!
  createKnowledge(input: CreateKnowledgeInput!): KnowledgeDto!
  createProject(input: CreateProjectInput!): ProjectDto!
  createCity(input: CreateCityInput!): CityDto!
  createPost(input: CreatePostInput!): PostDto!
  deletePost(input: DeletePostInput!): Boolean!
}

input CreateCompanyInput {
  name: String!
  uuid: String
}

input CreateHeadingInput {
  name: String!
  uuid: String
}

input CreateServiceInput {
  name: String!
  uuid: String
}

input CreateKnowledgeInput {
  name: String!
  uuid: String
}

input CreateProjectInput {
  name: String!
  uuid: String
}

input CreateCityInput {
  isoCode: String!
  provincia: String!
  departamento: String!
}

input CreatePostInput {
  title: String!
  description: String!
  content: String!
  postType: String!
  mainImage: String
}

input DeletePostInput {
  uuid: String!
}